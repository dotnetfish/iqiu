{"remainingRequest":"D:\\pc端clone\\iqiu\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\pc端clone\\iqiu\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\pc端clone\\iqiu\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\pc端clone\\iqiu\\src\\views\\MCenter\\LiveOption.vue?vue&type=template&id=452e0330&scoped=true&","dependencies":[{"path":"D:\\pc端clone\\iqiu\\src\\views\\MCenter\\LiveOption.vue","mtime":1594000643106},{"path":"D:\\pc端clone\\iqiu\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1593501341354},{"path":"D:\\pc端clone\\iqiu\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1593501453075},{"path":"D:\\pc端clone\\iqiu\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1593501341354},{"path":"D:\\pc端clone\\iqiu\\node_modules\\vue-loader\\lib\\index.js","mtime":1593501453075}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}