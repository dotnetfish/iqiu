{"remainingRequest":"/Users/zj-db0720/work/sourcescode/projects/gitee/iqiu/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zj-db0720/work/sourcescode/projects/gitee/iqiu/src/components/video/videoPlayer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zj-db0720/work/sourcescode/projects/gitee/iqiu/src/components/video/videoPlayer.vue","mtime":1595570908572},{"path":"/Users/zj-db0720/work/sourcescode/projects/gitee/iqiu/node_modules/cache-loader/dist/cjs.js","mtime":1595570902420},{"path":"/Users/zj-db0720/work/sourcescode/projects/gitee/iqiu/node_modules/thread-loader/dist/cjs.js","mtime":1595570907792},{"path":"/Users/zj-db0720/work/sourcescode/projects/gitee/iqiu/node_modules/babel-loader/lib/index.js","mtime":1595570901804},{"path":"/Users/zj-db0720/work/sourcescode/projects/gitee/iqiu/node_modules/cache-loader/dist/cjs.js","mtime":1595570902420},{"path":"/Users/zj-db0720/work/sourcescode/projects/gitee/iqiu/node_modules/vue-loader/lib/index.js","mtime":1595570907990}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IEJ1dHRvbiwgUG9wb3ZlciwgZGl2aWRlciwgQ2Fyb3VzZWwsIENhcm91c2VsSXRlbSB9IGZyb20gJ2VsZW1lbnQtdWknOwppbXBvcnQgVnVlRHBsYXllckhscyBmcm9tICJAL2NvbXBvbmVudHMvdmlkZW8vVnVlRHBsYXllckhscy52dWUiOwppbXBvcnQgbGl2ZWxpc3RpdGVtIGZyb20gIkAvY29tcG9uZW50cy9saXZlLWxpc3QtaXRlbS52dWUiOwppbXBvcnQgeyBkZWNyeXB0IH0gZnJvbSAiQC9tb2R1bGVzL3V0aWxzL2NyeXB0by5qcyI7CmltcG9ydCB7IGdldENoYW5uZWxJbmZvIH0gZnJvbSAiQC9hcGkvYXBpIjsKaW1wb3J0IHN0b3JhZ2VzIGZyb20gIkAvdXRpbHMvc3RvcmFnZS5qcyI7CmltcG9ydCBicm93c2VyIGZyb20gIkAvdXRpbHMvYnJvd3Nlci5qcyI7Cgpjb25zb2xlLmxvZyhicm93c2VyLCAnYnJvd3NlcicpOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ2hvbWUtbGl2ZScsCiAgY29tcG9uZW50czogewogICAgW0J1dHRvbi5uYW1lXTogQnV0dG9uLAogICAgW1BvcG92ZXIubmFtZV06IFBvcG92ZXIsCiAgICBbZGl2aWRlci5uYW1lXTogZGl2aWRlciwKICAgIFtDYXJvdXNlbC5uYW1lXTogQ2Fyb3VzZWwsCiAgICBbQ2Fyb3VzZWxJdGVtLm5hbWVdOiBDYXJvdXNlbEl0ZW0sCiAgICBWdWVEcGxheWVySGxzLAogICAgbGl2ZWxpc3RpdGVtCiAgfSwKICBwcm9wczogewogICAgcm9vbUlkOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJycKICAgIH0sCiAgICBub3RMaXZpbmdTdWdnZXN0OiB7CiAgICAgIHR5cGU6IEFycmF5CiAgICB9CiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZW5jcnlwdElwOiAnJywKICAgICAgcGxheVN0YXR1czogMSwgLy8gMS3mraPlnKjliqDovb3jgIEyLeaXoOS/oeWPt+OAgQogICAgICAvLyDop4bpopHkv6Hmga8KICAgICAgdmlkZW86IHsKICAgICAgICBwaWM6ICcnLAogICAgICAgIHR5cGU6ICJmbHYiLAogICAgICAgIGRlZmF1bHRRdWFsaXR5OiAwLAogICAgICAgIHVybDogJycsCiAgICAgICAgcXVhbGl0eTogWwogICAgICAgICAgewogICAgICAgICAgICBjb2RlOiAnbWVkaXVtJywKICAgICAgICAgICAgbmFtZTogJ+agh+a4hScsCiAgICAgICAgICAgIHR5cGU6ICdmbHYnLAogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgY29kZTogJ29yaWdpbicsCiAgICAgICAgICAgIG5hbWU6ICfpq5jmuIUnLAogICAgICAgICAgICB0eXBlOiAnZmx2JywKICAgICAgICAgIH0sCiAgICAgICAgXSwKICAgICAgfSwKICAgICAgcmVGcmVzaDogdHJ1ZQogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHt9LAogIGNyZWF0ZWQoKSB7CiAgfSwKICBtb3VudGVkKCkgewogICAgaWYgKHRoaXMucm9vbUlkICE9PSAnJykgewogICAgICB0aGlzLmdldENoYW5uZWwoKQogICAgfQogICAgLy8gdGhpcy5pcEVuY3J5cDU3KCkKICB9LAogIGRlc3Ryb3llZCgpIHsKICB9LAogIG1ldGhvZHM6IHsKICAgIC8vIOiOt+WPluinhumikeS/oeaBrwogICAgZ2V0Q2hhbm5lbCgpIHsKICAgICAgY29uc29sZS5sb2coJ+inhumikee7hOS7ti3miafooYzojrflj5bkv6Hlj7fmlrnms5UnLCB0aGlzLnJvb21JZCkKICAgICAgZ2V0Q2hhbm5lbEluZm8odGhpcy5yb29tSWQpLnRoZW4ocmVzID0+IHsgIC8vIOWmguaenOivt+axguWksei0peWmguS9leiOt+WPlgogICAgICAgIGlmIChyZXMuY29kZSA9PT0gMCkgewogICAgICAgICAgdGhpcy5hbmNob3JEZXRhaWwgPSByZXMuZGF0YQogICAgICAgICAgY29uc29sZS5sb2coJ+inhumikei/lOWbnicsIHJlcykKICAgICAgICAgIC8vIHRoaXMuYW5jaG9yRGV0YWlsLnBsYXlTdGF0dXNDb2RlID0gOTA1CiAgICAgICAgICBzd2l0Y2ggKHRoaXMuYW5jaG9yRGV0YWlsLnBsYXlTdGF0dXNDb2RlKSB7CiAgICAgICAgICAgIGNhc2UgMDogLy8g5q2j5bi4CiAgICAgICAgICAgICAgdGhpcy5wbGF5U3RhdHVzID0gMAogICAgICAgICAgICAgIC8vIGlmIChyZXMuZGF0YS5tM3U4ICYmIEpTT04uc3RyaW5naWZ5KHJlcy5kYXRhLm0zdTgucnRtcGxpc3QpICE9PSAne30nKSB7ICAvLyDmuIXmmbDluqYKICAgICAgICAgICAgICBpZiAocmVzLmRhdGEuYWxsUGxheVVybHMpIHsKICAgICAgICAgICAgICAgIGNvbnN0IHF1YWxpdHkgPSBzdG9yYWdlcy5nZXRJdGVtKCdxdWFsaXR5JykgfHwgJ21lZGl1bSc7CiAgICAgICAgICAgICAgICB0aGlzLnZpZGVvLmRlZmF1bHRRdWFsaXR5ID0gcXVhbGl0eT09ICdtZWRpdW0nPzA6MQogICAgICAgICAgICAgICAgaWYgKGJyb3dzZXIuQ2hyb21lKSB7CiAgICAgICAgICAgICAgICAgIC8vIGNocm9tZSDmtY/op4jlmajljrvmjonmuIXmmbDluqbliIfmjaIKICAgICAgICAgICAgICAgICAgZGVsZXRlIHRoaXMudmlkZW8ucXVhbGl0eQogICAgICAgICAgICAgICAgICB0aGlzLnZpZGVvLnVybCA9IGRlY3J5cHQocmVzLmRhdGEucGxheVVybCkKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgIHRoaXMuZ2V0VmlkZW9VcmwocmVzLmRhdGEuYWxsUGxheVVybHMpCiAgICAgICAgICAgICAgICAgIHRoaXMudmlkZW8udXJsID0gZGVjcnlwdChyZXMuZGF0YS5hbGxQbGF5VXJsc1txdWFsaXR5XSkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIHRoaXMudmlkZW8ucGljID0gcmVzLmRhdGEuaW1hZ2VVcmwKICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCfop4bpopHop6Plr4YtLScsIHRoaXMudmlkZW8udXJsKQogICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICB0aGlzLnBsYXlTdGF0dXMgPSAyCiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICBjYXNlIDkwMzogLy8g6KKr5bCB56aBCiAgICAgICAgICAgICAgdGhpcy5wbGF5U3RhdHVzID0gOTAzCiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIGNhc2UgOTA1OiAvLyDmnKrlvIDmkq0KICAgICAgICAgICAgICB0aGlzLnBsYXlTdGF0dXMgPSA5MDUKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgZGVmYXVsdDogLy8g5peg5L+h5Y+3CiAgICAgICAgICAgICAgdGhpcy5wbGF5U3RhdHVzID0gMgogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB0aGlzLnBsYXlTdGF0dXMgPSAyCiAgICAgICAgfQogICAgICB9KQogICAgfSwKICAgIC8vIOinhumikVVSTC3muIXmmbDluqYt6Kej5p6QLeaVsOe7hAogICAgZ2V0VmlkZW9VcmwocnRtcGxpc3QpIHsKICAgICAgZm9yIChsZXQga2V5IGluIHJ0bXBsaXN0KSB7CiAgICAgICAgY29uc29sZS5sb2coa2V5KTsKICAgICAgICB0aGlzLnZpZGVvLnF1YWxpdHkuZm9yRWFjaChpdGVtID0+IHsKICAgICAgICAgIGNvbnNvbGUubG9nKGl0ZW0pOwogICAgICAgICAgaWYgKGl0ZW0uY29kZSA9PT0ga2V5KSB7CiAgICAgICAgICAgIGl0ZW0udXJsID0gZGVjcnlwdChydG1wbGlzdFtrZXldKQogICAgICAgICAgfQogICAgICAgIH0pCiAgICAgIH0KICAgIH0sCiAgICAvLyDliLfmlrDph43or5UKICAgIHJlZnJlc2hSZXRyeSgpIHsKICAgICAgLy8gdGhpcy5nZXRDaGFubmVsSW5mbygpCiAgICB9LAogICAgaXBFbmNyeXA1NygpIHsKICAgICAgbGV0IHVzZXJJcCA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCJ1c2VySXAiKS5zcGxpdCgnLicpCiAgICAgIGxldCBlbmNyeXB0S2V5ID0gIlhRSnJLZmVVYlpkMXQ1VmFwTnp2RTlUeWxGaFJNd0FCR3F4dW04NFBDNzYySDBqc2tjM1lnblNETCIKICAgICAgdXNlcklwLmZvckVhY2goKGl0ZW0pID0+IHsKICAgICAgICBsZXQgcmVzdWx0ID0gcGFyc2VJbnQoKCtpdGVtKSAvIDU3KSAvLyDllYYKICAgICAgICBsZXQgcmVtYWluZGVyID0gKCtpdGVtKSAlIDU3ICAgICAgICAvLyDkvZnmlbAKICAgICAgICBpZiAocmVzdWx0ID4gMCkgewogICAgICAgICAgdGhpcy5lbmNyeXB0SXAgKz0gZW5jcnlwdEtleS5zdWJzdHJpbmcocmVzdWx0LCByZXN1bHQgKyAxKSArIGVuY3J5cHRLZXkuc3Vic3RyaW5nKHJlbWFpbmRlciwgcmVtYWluZGVyICsgMSkKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGhpcy5lbmNyeXB0SXAgKz0gJ3cnICsgZW5jcnlwdEtleS5zdWJzdHJpbmcocmVtYWluZGVyLCByZW1haW5kZXIgKyAxKQogICAgICAgIH0KICAgICAgfSkKICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICAndmlkZW8ucGljJygpIHsKICAgICAgLy8gaWYobmV3VmFsdWUgIT09ICcnICYmIG9sZFZhbHVlICE9PSAnJyl7CiAgICAgIC8vICAgY29uc29sZS5sb2coJ+ajgOa1i+WIsHZpZGVvLVVSTOWPmOWMlicpCiAgICAgIC8vICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gewogICAgICAvLyAgICAgY29uc29sZS5sb2coJ+aSreaUvuWZqOeItue7hOS7ti3lvoXplIDmr4EnKQogICAgICAvLyAgICAgdGhpcy4kcmVmcy5EUGxheWVyLmRlc3Ryb3lQbGF5ZXIoKQogICAgICAvLyAgICAgdGhpcy4kcmVmcy5EUGxheWVyLmluaXREUGxheWVyKCkKICAgICAgLy8gICB9KQogICAgICAvLyB9ZWxzZSBpZihuZXdWYWx1ZSAhPT0gJycpewogICAgICAvLyAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHsKICAgICAgLy8gICAgIGNvbnNvbGUubG9nKCfop4bpopHnu4Tku7Yt55uR5ZCs5Yiw5bCB6Z2i5Y+Y5YyWJykKICAgICAgLy8gICAgIHRoaXMuJHJlZnMuRFBsYXllci5pbml0RFBsYXllcigpCiAgICAgIC8vICAgfSkKICAgICAgLy8gfQoKICAgICAgLy8gaWYobmV3VmFsdWUgIT09ICcnKXsKICAgICAgLy8gICB0aGlzLnJlRnJlc2g9IGZhbHNlCiAgICAgIC8vICAgdGhpcy4kbmV4dFRpY2soKCk9PnsKICAgICAgLy8gICAgIGNvbnNvbGUubG9nKCfov5DooYzlrZDnu4Tku7YnKQogICAgICAvLyAgICAgdGhpcy5yZUZyZXNoID0gdHJ1ZQogICAgICAvLyAgIH0pCiAgICAgIC8vIH0KICAgIH0sCiAgICByb29tSWQoKSB7CiAgICAgIHRoaXMuZ2V0Q2hhbm5lbCgpCiAgICAgIHRoaXMucmVGcmVzaCA9IGZhbHNlCiAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHsKICAgICAgICBjb25zb2xlLmxvZygn6L+Q6KGM5a2Q57uE5Lu2JykKICAgICAgICB0aGlzLnJlRnJlc2ggPSB0cnVlCiAgICAgIH0pCiAgICB9CiAgfQp9Cg=="},null]}