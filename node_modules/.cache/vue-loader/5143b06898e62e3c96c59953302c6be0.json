{"remainingRequest":"/Users/zj-db0720/work/sourcescode/projects/gitee/iqiu/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zj-db0720/work/sourcescode/projects/gitee/iqiu/src/views/category-list.vue?vue&type=style&index=0&id=7796bde3&lang=scss&scoped=true&","dependencies":[{"path":"/Users/zj-db0720/work/sourcescode/projects/gitee/iqiu/src/views/category-list.vue","mtime":1595570908592},{"path":"/Users/zj-db0720/work/sourcescode/projects/gitee/iqiu/node_modules/css-loader/dist/cjs.js","mtime":1595570903613},{"path":"/Users/zj-db0720/work/sourcescode/projects/gitee/iqiu/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1595570907990},{"path":"/Users/zj-db0720/work/sourcescode/projects/gitee/iqiu/node_modules/postcss-loader/src/index.js","mtime":1595570906300},{"path":"/Users/zj-db0720/work/sourcescode/projects/gitee/iqiu/node_modules/sass-loader/dist/cjs.js","mtime":1595570907455},{"path":"/Users/zj-db0720/work/sourcescode/projects/gitee/iqiu/node_modules/cache-loader/dist/cjs.js","mtime":1595570902420},{"path":"/Users/zj-db0720/work/sourcescode/projects/gitee/iqiu/node_modules/vue-loader/lib/index.js","mtime":1595570907990}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgIkAvYXNzZXRzL2Nzcy9faW5kZXguc2NzcyI7CgoubGl2ZS1saXN0LWJveCB7CiAgbWluLWhlaWdodDogNzB2aDsKICBoMyB7CiAgICBtYXJnaW46IDMwcHggMCAyMHB4OwogICAgcGFkZGluZy1sZWZ0OiAxMnB4OwogICAgZm9udC1zaXplOiAyMnB4OwogICAgdGV4dC1hbGlnbjogbGVmdDsKICAgIGZvbnQtd2VpZ2h0OiA1MDA7CiAgICBmb250LWZhbWlseTogJ1BpbmdGYW5nU0MtTWVkaXVtJywnUGluZ0ZhbmcgU0MnOwogIH0KICAubm8tZGF0YSB7CiAgICBAZXh0ZW5kICVjbGVhcmZpeDsKICAgIC8vIGRpc3BsYXk6IG5vbmU7CiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgICBpbWcgewogICAgICBoZWlnaHQ6MTQ1cHg7CiAgICB9CiAgICBwIHsKICAgICAgZm9udC1zaXplOiAxNXB4OwogICAgfQoKICB9CiAgLmxvYWQtbW9yZSB7CiAgICBAZXh0ZW5kICVjbGVhcmZpeDsKICAgIHBhZGRpbmc6IDIwcHggMDsKICAgIGZvbnQtc2l6ZTogMTVweDsKICAgIHRleHQtYWxpZ246IGNlbnRlcjsKICAgIGNvbG9yOiAjOTk5OwogIH0KfQoK"},{"version":3,"sources":["category-list.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiMA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"category-list.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"live-list-box\">\n    <subNav :typeId.sync=\"typeId\" :typeName.sync=\"typeName\" keys=\"CategoryList\" @change=\"routeChange\"></subNav>\n\n    <div class=\"liveRecomend-title\">\n      <img src=\"@/assets/icon_zb.png\" style=\"width:23px;height:23px;margin: 18px 12px 18px 0px;\">\n      <p class=\"liveRecomend-title-text\">{{typeName}}直播<i class=\"el-icon-arrow-right arrow-right\"></i></P>\n    </div>\n    <!--        <h3>{{typeName}}</h3>-->\n    <div style=\"margin: 0 -12px;width:1224px\">\n      <live-list-item\n        :liveList=\"allLiveList\" :itemW=\"getItemW\" @liveListEventTanck=\"liveListEventTanck\">\n      </live-list-item>\n    </div>\n\n    <div class=\"no-data\" v-show=\"isNoData\">\n      <img src=\"\" alt=\"\">\n      <p>暂时没有数据</p>\n    </div>\n    <div class=\"load-more\" v-show=\"isMore\">{{loadTxt}}</div>\n  </div>\n</template>\n\n<script>\n  // @ is an alias to /src\n  import subNav from '@/components/SubNav.vue'\n  import LiveListItem from '@/components/live-list-item.vue'\n  import * as eventTrack from '@/utils/eventTracking.js'\n  import * as api from \"@/api/api\";\n  //   import { Button } from 'element-ui';\n\n  export default {\n    name: 'CategoryList',\n    components: {\n      //   [Button.name]: Button,\n      LiveListItem,\n      subNav\n    },\n    data () {\n      return {\n        typeId: 'all',\n        page: 1,\n        size: 30,\n        typeName: '',\n        loadTxt: '~努力加载中...',\n        scrollFlag: false,\n        noDataFlag: false,\n        isDataShow: 1,\n        isNoData: 0,\n        isMore: 0,\n        allLiveList: [],\n        isFold: false\n      }\n    },\n    props: {\n      getisFold: {\n        type: Boolean,\n        default: false\n      }\n    },\n    created () {\n      // console.log('直播列表')\n      // this.getFoldState();\n      // this.getAllLiveList();\n      // this.regularRefresh();\n    },\n    mounted () {\n      window.addEventListener('scroll', this.scrollLoadMore, true);  // 监听（绑定）滚轮滚动事件\n    },\n    destroyed () {\n      window.removeEventListener('scroll', this.scrollLoadMore);\n    },\n    watch:{\n      '$route':'routeChange',\n      getisFold (val) {\n        this.isFold = val;\n        // console.log(888)\n      }\n    },\n    computed: {\n      getItemW () {\n        if(this.isFold){\n          return  'fold';\n        }else {\n          return  'unfold';\n        }\n      }\n\n    },\n    methods: {\n      getFoldState () {\n        let leftFoldState = window.sessionStorage.getItem('leftFoldState');\n        this.isFold =  leftFoldState === null ||  leftFoldState === 'false' ? false : true;\n      },\n      // 滚动加载更多\n      scrollLoadMore () {\n        let clientHeight = document.documentElement.clientHeight || document.body.clientHeight || window.screen.height ;  // 浏览器可视区域高度\n        // let clientWidth = document.documentElement.clientWidth || document.body.clientWidth || window.screen.width\n        let scrollTop = document.documentElement.scrollTop || document.body.scrollTop ||  window.pageYOffset; // 滚动条到顶部的距离\n        let scrollHeight =  document.documentElement.scrollHeight ||  document.body.scrollHeight; // 网页正文总高度\n        // let contentHeight = document.querySelector('.live-list-box').offsetHeight; //列表内容区域的高度\n        // console.log('clientHeight:' + clientHeight)\n        // console.log('clientWidth:' + clientWidth)\n        // console.log('scrollTop:' + scrollTop)\n        // console.log('scrollHeight:' + (scrollHeight-60))\n        // console.log('contentHeight:' + contentHeight)\n        //滚动条到底部的条件\n        if(scrollTop+clientHeight >= scrollHeight-60 && !this.noDataFlag){// 滚动条到头部的距离 + 屏幕高度 = 可滚动的总高度\n          if(this.scrollFlag ){return false}\n          this.scrollFlag = true;\n          this.isMore = 1;\n          let vm = this\n          setTimeout(function(){\n            vm.page++;\n            vm.getAllLiveList(vm.page,vm.size,vm.typeId)\n            vm.scrollFlag = false;\n          },1000);\n\n        }\n\n      },\n      // 监听路由变化\n      routeChange () {\n        this.isMore = 0;\n        this.page = 1;\n        this.allLiveList = [];\n        // this.getFoldState();\n        this.getAllLiveList();\n      },\n      //  获取直播列表\n      getAllLiveList () {\n        this.typeId = this.typeId || 'all';\n        let clientHeight = document.documentElement.clientHeight || document.body.clientHeight || window.screen.height ;  // 浏览器可视区域高度\n        // let clientWidth = document.documentElement.clientWidth || document.body.clientWidth || window.screen.width\n        // console.log('clientHeight:' + clientHeight)\n        // console.log('clientWidth:' + clientWidth)\n        if(clientHeight > 1080 && clientHeight < 1215) {\n          this.size = 40\n        }else if(clientHeight > 1215  && clientHeight < 1350 ) {\n          this.size = 50\n        }else if(clientHeight > 1350  && clientHeight < 1495) {\n          this.size = 60\n        }else if(clientHeight > 1495) {\n          this.size = 70\n        }\n        if(this.page > 1) {\n          //  console.log(66666666)\n          this.size = 20;\n        }\n        let data = {\n          p: this.page,\n          size: this.size,\n          typeId: this.typeId\n        }\n        let headers = {}\n        api.liveList(data,headers).then(res => {\n          // console.log(2222)\n          // console.log(res.data);\n          // this.allLiveList = res.data;\n          if(res.data.length) {\n            this.isMore = 0;\n            this.loadTxt = '加载中...';\n            this.noDataFlag = false;\n            // this.page = page+1;\n            this.allLiveList.push(...res.data);\n          } else {\n            this.isMore = 1;\n            this.loadTxt = '真的到底了';\n            this.noDataFlag = true;\n          }\n        })\n          .catch(e => {\n            console.error(e);\n\n          })\n      },\n      // 列表每两分钟定时刷新\n      regularRefresh(){\n        // setInterval(() => {\n        //   this.getAllLiveList()\n        // }, 120000)\n      },\n      //直播页-埋点-列表\n      liveListEventTanck(item){\n        let eventTrackParams = {}\n        eventTrackParams = { item_id: 'living_room_enter_click', page_id: 'zhibo', page_2_id: this.typeName , room_id: item.id, btn: item.name }\n        eventTrack.reportData(eventTrackParams)\n      },\n    }\n\n  }\n</script>\n<style lang=\"scss\" scoped>\n  @import \"@/assets/css/_index.scss\";\n\n  .live-list-box {\n    min-height: 70vh;\n    h3 {\n      margin: 30px 0 20px;\n      padding-left: 12px;\n      font-size: 22px;\n      text-align: left;\n      font-weight: 500;\n      font-family: 'PingFangSC-Medium','PingFang SC';\n    }\n    .no-data {\n      @extend %clearfix;\n      // display: none;\n      text-align: center;\n      img {\n        height:145px;\n      }\n      p {\n        font-size: 15px;\n      }\n\n    }\n    .load-more {\n      @extend %clearfix;\n      padding: 20px 0;\n      font-size: 15px;\n      text-align: center;\n      color: #999;\n    }\n  }\n\n</style>\n"]}]}