{"remainingRequest":"D:\\pc\\iqiu\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\pc\\iqiu\\src\\views\\category-list.vue?vue&type=style&index=0&id=7796bde3&lang=scss&scoped=true&","dependencies":[{"path":"D:\\pc\\iqiu\\src\\views\\category-list.vue","mtime":1594000643108},{"path":"D:\\pc\\iqiu\\node_modules\\css-loader\\dist\\cjs.js","mtime":1593501447640},{"path":"D:\\pc\\iqiu\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1593501453075},{"path":"D:\\pc\\iqiu\\node_modules\\postcss-loader\\src\\index.js","mtime":1593501448238},{"path":"D:\\pc\\iqiu\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1593501529409},{"path":"D:\\pc\\iqiu\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1593501341354},{"path":"D:\\pc\\iqiu\\node_modules\\vue-loader\\lib\\index.js","mtime":1593501453075}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgIkAvYXNzZXRzL2Nzcy9faW5kZXguc2NzcyI7CgoubGl2ZS1saXN0LWJveCB7CiAgbWluLWhlaWdodDogNzB2aDsKICBoMyB7CiAgICBtYXJnaW46IDMwcHggMCAyMHB4OwogICAgcGFkZGluZy1sZWZ0OiAxMnB4OwogICAgZm9udC1zaXplOiAyMnB4OwogICAgdGV4dC1hbGlnbjogbGVmdDsKICAgIGZvbnQtd2VpZ2h0OiA1MDA7CiAgICBmb250LWZhbWlseTogJ1BpbmdGYW5nU0MtTWVkaXVtJywnUGluZ0ZhbmcgU0MnOwogIH0KICAubm8tZGF0YSB7CiAgICBAZXh0ZW5kICVjbGVhcmZpeDsKICAgIC8vIGRpc3BsYXk6IG5vbmU7CiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgICBpbWcgewogICAgICBoZWlnaHQ6MTQ1cHg7CiAgICB9CiAgICBwIHsKICAgICAgZm9udC1zaXplOiAxNXB4OwogICAgfQoKICB9CiAgLmxvYWQtbW9yZSB7CiAgICBAZXh0ZW5kICVjbGVhcmZpeDsKICAgIHBhZGRpbmc6IDIwcHggMDsKICAgIGZvbnQtc2l6ZTogMTVweDsKICAgIHRleHQtYWxpZ246IGNlbnRlcjsKICAgIGNvbG9yOiAjOTk5OwogIH0KfQoK"},{"version":3,"sources":["category-list.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiMA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"category-list.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"live-list-box\">\r\n    <subNav :typeId.sync=\"typeId\" :typeName.sync=\"typeName\" keys=\"CategoryList\" @change=\"routeChange\"></subNav>\r\n\r\n    <div class=\"liveRecomend-title\">\r\n      <img src=\"@/assets/icon_zb.png\" style=\"width:23px;height:23px;margin: 18px 12px 18px 0px;\">\r\n      <p class=\"liveRecomend-title-text\">{{typeName}}直播<i class=\"el-icon-arrow-right arrow-right\"></i></P>\r\n    </div>\r\n    <!--        <h3>{{typeName}}</h3>-->\r\n    <div style=\"margin: 0 -12px;width:1224px\">\r\n      <live-list-item\r\n        :liveList=\"allLiveList\" :itemW=\"getItemW\" @liveListEventTanck=\"liveListEventTanck\">\r\n      </live-list-item>\r\n    </div>\r\n\r\n    <div class=\"no-data\" v-show=\"isNoData\">\r\n      <img src=\"\" alt=\"\">\r\n      <p>暂时没有数据</p>\r\n    </div>\r\n    <div class=\"load-more\" v-show=\"isMore\">{{loadTxt}}</div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  // @ is an alias to /src\r\n  import subNav from '@/components/SubNav.vue'\r\n  import LiveListItem from '@/components/live-list-item.vue'\r\n  import * as eventTrack from '@/utils/eventTracking.js'\r\n  import * as api from \"@/api/api\";\r\n  //   import { Button } from 'element-ui';\r\n\r\n  export default {\r\n    name: 'CategoryList',\r\n    components: {\r\n      //   [Button.name]: Button,\r\n      LiveListItem,\r\n      subNav\r\n    },\r\n    data () {\r\n      return {\r\n        typeId: 'all',\r\n        page: 1,\r\n        size: 30,\r\n        typeName: '',\r\n        loadTxt: '~努力加载中...',\r\n        scrollFlag: false,\r\n        noDataFlag: false,\r\n        isDataShow: 1,\r\n        isNoData: 0,\r\n        isMore: 0,\r\n        allLiveList: [],\r\n        isFold: false\r\n      }\r\n    },\r\n    props: {\r\n      getisFold: {\r\n        type: Boolean,\r\n        default: false\r\n      }\r\n    },\r\n    created () {\r\n      // console.log('直播列表')\r\n      // this.getFoldState();\r\n      // this.getAllLiveList();\r\n      // this.regularRefresh();\r\n    },\r\n    mounted () {\r\n      window.addEventListener('scroll', this.scrollLoadMore, true);  // 监听（绑定）滚轮滚动事件\r\n    },\r\n    destroyed () {\r\n      window.removeEventListener('scroll', this.scrollLoadMore);\r\n    },\r\n    watch:{\r\n      '$route':'routeChange',\r\n      getisFold (val) {\r\n        this.isFold = val;\r\n        // console.log(888)\r\n      }\r\n    },\r\n    computed: {\r\n      getItemW () {\r\n        if(this.isFold){\r\n          return  'fold';\r\n        }else {\r\n          return  'unfold';\r\n        }\r\n      }\r\n\r\n    },\r\n    methods: {\r\n      getFoldState () {\r\n        let leftFoldState = window.sessionStorage.getItem('leftFoldState');\r\n        this.isFold =  leftFoldState === null ||  leftFoldState === 'false' ? false : true;\r\n      },\r\n      // 滚动加载更多\r\n      scrollLoadMore () {\r\n        let clientHeight = document.documentElement.clientHeight || document.body.clientHeight || window.screen.height ;  // 浏览器可视区域高度\r\n        // let clientWidth = document.documentElement.clientWidth || document.body.clientWidth || window.screen.width\r\n        let scrollTop = document.documentElement.scrollTop || document.body.scrollTop ||  window.pageYOffset; // 滚动条到顶部的距离\r\n        let scrollHeight =  document.documentElement.scrollHeight ||  document.body.scrollHeight; // 网页正文总高度\r\n        // let contentHeight = document.querySelector('.live-list-box').offsetHeight; //列表内容区域的高度\r\n        // console.log('clientHeight:' + clientHeight)\r\n        // console.log('clientWidth:' + clientWidth)\r\n        // console.log('scrollTop:' + scrollTop)\r\n        // console.log('scrollHeight:' + (scrollHeight-60))\r\n        // console.log('contentHeight:' + contentHeight)\r\n        //滚动条到底部的条件\r\n        if(scrollTop+clientHeight >= scrollHeight-60 && !this.noDataFlag){// 滚动条到头部的距离 + 屏幕高度 = 可滚动的总高度\r\n          if(this.scrollFlag ){return false}\r\n          this.scrollFlag = true;\r\n          this.isMore = 1;\r\n          let vm = this\r\n          setTimeout(function(){\r\n            vm.page++;\r\n            vm.getAllLiveList(vm.page,vm.size,vm.typeId)\r\n            vm.scrollFlag = false;\r\n          },1000);\r\n\r\n        }\r\n\r\n      },\r\n      // 监听路由变化\r\n      routeChange () {\r\n        this.isMore = 0;\r\n        this.page = 1;\r\n        this.allLiveList = [];\r\n        // this.getFoldState();\r\n        this.getAllLiveList();\r\n      },\r\n      //  获取直播列表\r\n      getAllLiveList () {\r\n        this.typeId = this.typeId || 'all';\r\n        let clientHeight = document.documentElement.clientHeight || document.body.clientHeight || window.screen.height ;  // 浏览器可视区域高度\r\n        // let clientWidth = document.documentElement.clientWidth || document.body.clientWidth || window.screen.width\r\n        // console.log('clientHeight:' + clientHeight)\r\n        // console.log('clientWidth:' + clientWidth)\r\n        if(clientHeight > 1080 && clientHeight < 1215) {\r\n          this.size = 40\r\n        }else if(clientHeight > 1215  && clientHeight < 1350 ) {\r\n          this.size = 50\r\n        }else if(clientHeight > 1350  && clientHeight < 1495) {\r\n          this.size = 60\r\n        }else if(clientHeight > 1495) {\r\n          this.size = 70\r\n        }\r\n        if(this.page > 1) {\r\n          //  console.log(66666666)\r\n          this.size = 20;\r\n        }\r\n        let data = {\r\n          p: this.page,\r\n          size: this.size,\r\n          typeId: this.typeId\r\n        }\r\n        let headers = {}\r\n        api.liveList(data,headers).then(res => {\r\n          // console.log(2222)\r\n          // console.log(res.data);\r\n          // this.allLiveList = res.data;\r\n          if(res.data.length) {\r\n            this.isMore = 0;\r\n            this.loadTxt = '加载中...';\r\n            this.noDataFlag = false;\r\n            // this.page = page+1;\r\n            this.allLiveList.push(...res.data);\r\n          } else {\r\n            this.isMore = 1;\r\n            this.loadTxt = '真的到底了';\r\n            this.noDataFlag = true;\r\n          }\r\n        })\r\n          .catch(e => {\r\n            console.error(e);\r\n\r\n          })\r\n      },\r\n      // 列表每两分钟定时刷新\r\n      regularRefresh(){\r\n        // setInterval(() => {\r\n        //   this.getAllLiveList()\r\n        // }, 120000)\r\n      },\r\n      //直播页-埋点-列表\r\n      liveListEventTanck(item){\r\n        let eventTrackParams = {}\r\n        eventTrackParams = { item_id: 'living_room_enter_click', page_id: 'zhibo', page_2_id: this.typeName , room_id: item.id, btn: item.name }\r\n        eventTrack.reportData(eventTrackParams)\r\n      },\r\n    }\r\n\r\n  }\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n  @import \"@/assets/css/_index.scss\";\r\n\r\n  .live-list-box {\r\n    min-height: 70vh;\r\n    h3 {\r\n      margin: 30px 0 20px;\r\n      padding-left: 12px;\r\n      font-size: 22px;\r\n      text-align: left;\r\n      font-weight: 500;\r\n      font-family: 'PingFangSC-Medium','PingFang SC';\r\n    }\r\n    .no-data {\r\n      @extend %clearfix;\r\n      // display: none;\r\n      text-align: center;\r\n      img {\r\n        height:145px;\r\n      }\r\n      p {\r\n        font-size: 15px;\r\n      }\r\n\r\n    }\r\n    .load-more {\r\n      @extend %clearfix;\r\n      padding: 20px 0;\r\n      font-size: 15px;\r\n      text-align: center;\r\n      color: #999;\r\n    }\r\n  }\r\n\r\n</style>\r\n"]}]}