{"remainingRequest":"D:\\pc\\iqiu\\node_modules\\babel-loader\\lib\\index.js!D:\\pc\\iqiu\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\pc\\iqiu\\src\\utils\\chat.js","dependencies":[{"path":"D:\\pc\\iqiu\\src\\utils\\chat.js","mtime":1594000643103},{"path":"D:\\pc\\iqiu\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1593501341354},{"path":"D:\\pc\\iqiu\\node_modules\\babel-loader\\lib\\index.js","mtime":1593501344079},{"path":"D:\\pc\\iqiu\\node_modules\\eslint-loader\\index.js","mtime":1593501432660}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucGFyc2UtaW50IjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiRDovcGMvaXFpdS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CgovLyBpbXBvcnQgQVYgZnJvbSAnbGVhbmNsb3VkLXN0b3JhZ2UnICAvLyDlrZjlgqjmnI3liqEKdmFyIEFWID0gcmVxdWlyZSgnbGVhbmVuZ2luZScpOwoKaW1wb3J0IHsgcmVhbFRpbWUsIE1lc3NhZ2UgfSBmcm9tICdAL3V0aWxzL2xlYW5jbG91ZC5qcyc7CmltcG9ydCB7IGxlYW5DbG91ZFNpZ24gfSBmcm9tICdAL2FwaS9hcGkuanMnOwpjb25zb2xlLmxvZyhBVi5DbG91ZCwgJ0FWLkNsb3VkQVYuQ2xvdWRBVi5DbG91ZCcpOwp2YXIgY3VycmVudENvbnZlcnNhdGlvbiA9IG51bGw7CmV4cG9ydCBmdW5jdGlvbiBnZXRDaGF0Um9vbShfeCwgX3gyKSB7CiAgcmV0dXJuIF9nZXRDaGF0Um9vbS5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9CgpmdW5jdGlvbiBfZ2V0Q2hhdFJvb20oKSB7CiAgX2dldENoYXRSb29tID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKGNsaWVudElkLCBjaGF0Um9vbUluZm8pIHsKICAgIHZhciBtYWMsIHNpZ25hdHVyZUZhY3RvcnksIGNvbnZlcnNhdGlvblNpZ25hdHVyZUZhY3Rvcnk7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdwcm9jZXNzLmVudi5WVUVfQVBQX0NPTkZJR19FTlYnLCBwcm9jZXNzLmVudi5WVUVfQVBQX0NPTkZJR19FTlYpOyAvLyDnu5/kuIDmt7vliqAgdGFnIFRPRE8g5LqS6LiiCiAgICAgICAgICAgIC8vIHJldHVybiByZWFsVGltZS5jcmVhdGVJTUNsaWVudChjbGllbnRJZCwgeyB0YWc6ICdQQycgfSkKCiAgICAgICAgICAgIGNvbnNvbGUubG9nKGNoYXRSb29tSW5mbywgJ2NoYXRSb29tSW5mbycpOwogICAgICAgICAgICBjb25zb2xlLmxvZyhjbGllbnRJZCwgJ2NsaWVudElkJyk7IC8vIEFWLkNsb3VkLmRlZmluZSgnc2lnbkxvZ2luJywgYXN5bmMgcmVxdWVzdCA9PiB7CiAgICAgICAgICAgIC8vICAgY29uc3Qge2NsaWVudElkfSA9IHJlcXVlc3QucGFyYW1zCiAgICAgICAgICAgIC8vICAgLy8g6L+Z6YeM5Y+v5Lul5omn6KGM5LiA5Lqb5qOA6aqM77yM5L6L5aaC5oKo55qE55So5oi357O757uf6YeM6Z2i5piv5ZCm5pyJ5Yy56YWN6L+Z5LiqIGNsaWVudElkIOeahOeUqOaIt++8jOaIluiAheivpeeUqOaIt+WtmOWcqOS6juiHquWumuS5ieeahOm7keWQjeWNleS4re+8jAogICAgICAgICAgICAvLyAgIC8vIOS9oOWPr+S7peWcqOatpOaKm+WHuuW8guW4uOadpeS4reaWreetvuWQjeeahOi/h+eoi++8mgogICAgICAgICAgICAvLyAgIC8vIHRocm93IG5ldyBBVi5DbG91ZC5FcnJvcignY2xpZW50SWQgYmxvY2tlZCcpCiAgICAgICAgICAgIC8vICAgcmV0dXJuIFtmMS5hcHBpZCwgY2xpZW50SWQsICcnLCBmMS51dGNUaW1lU3RhbXAsIGYxLnJhbmRvbU51bV0KICAgICAgICAgICAgLy8gfSkKICAgICAgICAgICAgLy8gdmFyIHNpZ25hdHVyZUZhY3RvcnkgPSBmdW5jdGlvbiAoY2xpZW50SWQpIHsKICAgICAgICAgICAgLy8gICAvLyBhcHBpZDpjbGllbnRpZDpzb3J0ZWRfbWVtYmVyX2lkczp0aW1lc3RhbXA6bm9uY2UKICAgICAgICAgICAgLy8gICByZXR1cm4gQVYuQ2xvdWQucnBjKCdzaWduTG9naW4nLCB7CiAgICAgICAgICAgIC8vICAgICAvLyBhcHBpZDogZjEuYXBwaWQsCiAgICAgICAgICAgIC8vICAgICBjbGllbnRJZDogY2xpZW50SWQsCiAgICAgICAgICAgIC8vICAgICAvLyB0aW1lc3RhbXA6IGYxLnV0Y1RpbWVTdGFtcCwKICAgICAgICAgICAgLy8gICAgIC8vIG5vbmNlOiBmMS5yYW5kb21OdW0sCiAgICAgICAgICAgIC8vICAgICAvLyBzaWduOiBmMS5zaWduCiAgICAgICAgICAgIC8vICAgfSk7IC8vIEFWLkNsb3VkLnJwYyDov5Tlm57kuIDkuKogUHJvbWlzZQogICAgICAgICAgICAvLyB9OwogICAgICAgICAgICAvLyBBVi5DbG91ZC5kZWZpbmUoJ3NpZ25Mb2dpbicsIGFzeW5jIHJlcXVlc3QgPT4gewogICAgICAgICAgICAvLyAgIGNvbnN0IHtjbGllbnRJZH0gPSByZXF1ZXN0LnBhcmFtcwogICAgICAgICAgICAvLyAgIC8vIOi/memHjOWPr+S7peaJp+ihjOS4gOS6m+ajgOmqjO+8jOS+i+WmguaCqOeahOeUqOaIt+ezu+e7n+mHjOmdouaYr+WQpuacieWMuemFjei/meS4qiBjbGllbnRJZCDnmoTnlKjmiLfvvIzmiJbogIXor6XnlKjmiLflrZjlnKjkuo7oh6rlrprkuYnnmoTpu5HlkI3ljZXkuK3vvIwKICAgICAgICAgICAgLy8gICAvLyDkvaDlj6/ku6XlnKjmraTmipvlh7rlvILluLjmnaXkuK3mlq3nrb7lkI3nmoTov4fnqIvvvJoKICAgICAgICAgICAgLy8gICAvLyB0aHJvdyBuZXcgQVYuQ2xvdWQuRXJyb3IoJ2NsaWVudElkIGJsb2NrZWQnKQogICAgICAgICAgICAvLyAgIHJldHVybiBzaWduKCAodGltZXN0YW1wLCBub25jZSkgPT4gW2YxLmFwcGlkLCBjbGllbnRJZCwgJycsIHRpbWVzdGFtcCwgbm9uY2VdKQogICAgICAgICAgICAvLyAgIC8vIHJldHVybiB7dGltZXN0YW1wOmYxLnV0Y1RpbWVTdGFtcCwgbm9uY2U6ZjEucmFuZG9tTnVtLHNpZ25hdHVyZTpmMS5zaWdufQogICAgICAgICAgICAvLyB9KQogICAgICAgICAgICAvLyB0ZXN0IG1lbmcKCiAgICAgICAgICAgIG1hYyA9IGNsaWVudElkOwoKICAgICAgICAgICAgc2lnbmF0dXJlRmFjdG9yeSA9IGZ1bmN0aW9uIHNpZ25hdHVyZUZhY3RvcnkoY2xpZW50SWQpIHsKICAgICAgICAgICAgICBpZiAoY2xpZW50SWQuc2xpY2UoNSwgNikgPT09ICdWJykgewogICAgICAgICAgICAgICAgbWFjID0gY2xpZW50SWQuc3Vic3RyKDEzKTsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIHJldHVybiBsZWFuQ2xvdWRTaWduKGNoYXRSb29tSW5mbywgbWFjKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgICAgICAgIGlmIChyZXMuY29kZSA9PT0gMCkgewogICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygn5by55bmV562+5ZCN5o6l5Y+jMCcsIHJlcyk7CiAgICAgICAgICAgICAgICAgIHZhciB0aW1lc3RhbXAgPSBwYXJzZUludChyZXMuZGF0YVswXS51dGNUaW1lU3RhbXApOwogICAgICAgICAgICAgICAgICB2YXIgbm9uY2UgPSByZXMuZGF0YVswXS5yYW5kb21OdW07CiAgICAgICAgICAgICAgICAgIHZhciBzaWduYXR1cmUgPSByZXMuZGF0YVswXS5zaWduOwogICAgICAgICAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICAgICAgICAgIHRpbWVzdGFtcDogdGltZXN0YW1wLAogICAgICAgICAgICAgICAgICAgIG5vbmNlOiBub25jZSwKICAgICAgICAgICAgICAgICAgICBzaWduYXR1cmU6IHNpZ25hdHVyZQogICAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ+Wksei0pScpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9OwoKICAgICAgICAgICAgY29udmVyc2F0aW9uU2lnbmF0dXJlRmFjdG9yeSA9IGZ1bmN0aW9uIGNvbnZlcnNhdGlvblNpZ25hdHVyZUZhY3RvcnkoY2hhdFJvb21JbmZvKSB7CiAgICAgICAgICAgICAgcmV0dXJuIGxlYW5DbG91ZFNpZ24oY2hhdFJvb21JbmZvLCBtYWMpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgICAgICAgaWYgKHJlcy5jb2RlID09PSAwKSB7CiAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCflvLnluZXnrb7lkI3mjqXlj6MxJywgcmVzKTsKICAgICAgICAgICAgICAgICAgdmFyIHRpbWVzdGFtcCA9IHBhcnNlSW50KHJlcy5kYXRhWzFdLnV0Y1RpbWVTdGFtcCk7CiAgICAgICAgICAgICAgICAgIHZhciBub25jZSA9IHJlcy5kYXRhWzFdLnJhbmRvbU51bTsKICAgICAgICAgICAgICAgICAgdmFyIHNpZ25hdHVyZSA9IHJlcy5kYXRhWzFdLnNpZ247CiAgICAgICAgICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgICAgICAgICAgdGltZXN0YW1wOiB0aW1lc3RhbXAsCiAgICAgICAgICAgICAgICAgICAgbm9uY2U6IG5vbmNlLAogICAgICAgICAgICAgICAgICAgIHNpZ25hdHVyZTogc2lnbmF0dXJlCiAgICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygn5aSx6LSlJyk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH07CgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCByZWFsVGltZS5jcmVhdGVJTUNsaWVudChjbGllbnRJZCwgewogICAgICAgICAgICAgIHNpZ25hdHVyZUZhY3Rvcnk6IHNpZ25hdHVyZUZhY3RvcnksCiAgICAgICAgICAgICAgY29udmVyc2F0aW9uU2lnbmF0dXJlRmFjdG9yeTogY29udmVyc2F0aW9uU2lnbmF0dXJlRmFjdG9yeQogICAgICAgICAgICB9KS50aGVuKGZ1bmN0aW9uIChjdXJyZW50Q2xpZW50KSB7CiAgICAgICAgICAgICAgY29uc29sZS5sb2coJ2N1cnJlbnRDbGllbnQnLCBjdXJyZW50Q2xpZW50KTsKICAgICAgICAgICAgICByZXR1cm4gY3VycmVudENsaWVudC5nZXRDb252ZXJzYXRpb24oY2hhdFJvb21JbmZvKTsKICAgICAgICAgICAgfSkudGhlbihmdW5jdGlvbiAoY29udmVyc2F0aW9uKSB7CiAgICAgICAgICAgICAgcmV0dXJuIGNvbnZlcnNhdGlvbi5qb2luKCk7CiAgICAgICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKGNvbnZlcnNhdGlvbikgewogICAgICAgICAgICAgIGN1cnJlbnRDb252ZXJzYXRpb24gPSBjb252ZXJzYXRpb247CiAgICAgICAgICAgICAgcmV0dXJuIGNvbnZlcnNhdGlvbjsKICAgICAgICAgICAgfSlbImNhdGNoIl0oZnVuY3Rpb24gKGVycikgewogICAgICAgICAgICAgIGNvbnNvbGUubG9nKCfov57mjqXnm7Tmkq3pl7TlpLHotKUnLCBlcnIpOwogICAgICAgICAgICB9KSk7CgogICAgICAgICAgY2FzZSA3OgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUpOwogIH0pKTsKICByZXR1cm4gX2dldENoYXRSb29tLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7Cn0KCmV4cG9ydCBmdW5jdGlvbiBzZW5kTXNnKHVzZXJJbnB1dCwgdXNlckluZm8pIHsKICB2YXIgbmV3TWVzc2FnZSA9IG5ldyBNZXNzYWdlKHVzZXJJbnB1dCk7CiAgbmV3TWVzc2FnZS5zZXRBdHRyaWJ1dGVzKHVzZXJJbmZvKTsKICByZXR1cm4gY3VycmVudENvbnZlcnNhdGlvbi5zZW5kKG5ld01lc3NhZ2UpLnRoZW4oZnVuY3Rpb24gKG1lc3NhZ2UpIHsKICAgIHJldHVybiBtZXNzYWdlOwogIH0pWyJjYXRjaCJdKGZ1bmN0aW9uIChlcnJvcikgewogICAgdGhyb3cgZXJyb3I7CiAgfSk7Cn0="},{"version":3,"sources":["D:/pc/iqiu/src/utils/chat.js"],"names":["AV","require","realTime","Message","leanCloudSign","console","log","Cloud","currentConversation","getChatRoom","clientId","chatRoomInfo","process","env","VUE_APP_CONFIG_ENV","mac","signatureFactory","slice","substr","then","res","code","timestamp","parseInt","data","utcTimeStamp","nonce","randomNum","signature","sign","conversationSignatureFactory","createIMClient","currentClient","getConversation","conversation","join","err","sendMsg","userInput","userInfo","newMessage","setAttributes","send","message","error"],"mappings":";;;;;;AAAA;AACA,IAAMA,EAAE,GAAGC,OAAO,CAAC,YAAD,CAAlB;;AACA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,sBAAlC;AACA,SAASC,aAAT,QAA8B,cAA9B;AAEAC,OAAO,CAACC,GAAR,CAAYN,EAAE,CAACO,KAAf,EAAsB,0BAAtB;AACA,IAAIC,mBAAmB,GAAG,IAA1B;AAEA,gBAAsBC,WAAtB;AAAA;AAAA;;;yEAAO,iBAA2BC,QAA3B,EAAqCC,YAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AACLN,YAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA6CM,OAAO,CAACC,GAAR,CAAYC,kBAAzD,EADK,CAEL;AACA;;AACAT,YAAAA,OAAO,CAACC,GAAR,CAAYK,YAAZ,EAA0B,cAA1B;AACAN,YAAAA,OAAO,CAACC,GAAR,CAAYI,QAAZ,EAAsB,UAAtB,EALK,CAOL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACIK,YAAAA,GAlCC,GAkCKL,QAlCL;;AAmCDM,YAAAA,gBAnCC,GAmCkB,SAAnBA,gBAAmB,CAAUN,QAAV,EAAoB;AACzC,kBAAGA,QAAQ,CAACO,KAAT,CAAe,CAAf,EAAiB,CAAjB,MAAwB,GAA3B,EAA+B;AAC7BF,gBAAAA,GAAG,GAAGL,QAAQ,CAACQ,MAAT,CAAgB,EAAhB,CAAN;AACD;;AACD,qBAAOd,aAAa,CAACO,YAAD,EAAeI,GAAf,CAAb,CAAiCI,IAAjC,CAAsC,UAACC,GAAD,EAAS;AACpD,oBAAIA,GAAG,CAACC,IAAJ,KAAa,CAAjB,EAAoB;AAClBhB,kBAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBc,GAAtB;AACA,sBAAME,SAAS,GAAGC,QAAQ,CAACH,GAAG,CAACI,IAAJ,CAAS,CAAT,EAAYC,YAAb,CAA1B;AACA,sBAAMC,KAAK,GAAGN,GAAG,CAACI,IAAJ,CAAS,CAAT,EAAYG,SAA1B;AACA,sBAAMC,SAAS,GAAGR,GAAG,CAACI,IAAJ,CAAS,CAAT,EAAYK,IAA9B;AACA,yBAAO;AAACP,oBAAAA,SAAS,EAATA,SAAD;AAAYI,oBAAAA,KAAK,EAALA,KAAZ;AAAmBE,oBAAAA,SAAS,EAATA;AAAnB,mBAAP;AACD,iBAND,MAMO;AACLvB,kBAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACD;AACF,eAVM,CAAP;AAWD,aAlDI;;AAmDDwB,YAAAA,4BAnDC,GAmD8B,SAA/BA,4BAA+B,CAASnB,YAAT,EAAuB;AAExD,qBAAOP,aAAa,CAACO,YAAD,EAAeI,GAAf,CAAb,CAAiCI,IAAjC,CAAsC,UAACC,GAAD,EAAS;AACpD,oBAAIA,GAAG,CAACC,IAAJ,KAAa,CAAjB,EAAoB;AAClBhB,kBAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBc,GAAtB;AACA,sBAAME,SAAS,GAAGC,QAAQ,CAACH,GAAG,CAACI,IAAJ,CAAS,CAAT,EAAYC,YAAb,CAA1B;AACA,sBAAMC,KAAK,GAAGN,GAAG,CAACI,IAAJ,CAAS,CAAT,EAAYG,SAA1B;AACA,sBAAMC,SAAS,GAAGR,GAAG,CAACI,IAAJ,CAAS,CAAT,EAAYK,IAA9B;AACA,yBAAO;AAACP,oBAAAA,SAAS,EAATA,SAAD;AAAYI,oBAAAA,KAAK,EAALA,KAAZ;AAAmBE,oBAAAA,SAAS,EAATA;AAAnB,mBAAP;AACD,iBAND,MAMO;AACLvB,kBAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACD;AACF,eAVM,CAAP;AAWD,aAhEI;;AAAA,6CAkEEJ,QAAQ,CAAC6B,cAAT,CAAwBrB,QAAxB,EAAkC;AACvCM,cAAAA,gBAAgB,EAAEA,gBADqB;AAEvCc,cAAAA,4BAA4B,EAAEA;AAFS,aAAlC,EAGJX,IAHI,CAGC,UAAUa,aAAV,EAAyB;AAC/B3B,cAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4B0B,aAA5B;AACA,qBAAOA,aAAa,CAACC,eAAd,CACLtB,YADK,CAAP;AAGD,aARM,EASJQ,IATI,CASC,UAAUe,YAAV,EAAwB;AAC5B,qBAAOA,YAAY,CAACC,IAAb,EAAP;AACD,aAXI,EAYJhB,IAZI,CAYC,UAAUe,YAAV,EAAwB;AAC5B1B,cAAAA,mBAAmB,GAAG0B,YAAtB;AACA,qBAAOA,YAAP;AACD,aAfI,WAgBE,UAAUE,GAAV,EAAe;AACpB/B,cAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuB8B,GAAvB;AACD,aAlBI,CAlEF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAuFP,OAAO,SAASC,OAAT,CAAiBC,SAAjB,EAA4BC,QAA5B,EAAsC;AAC3C,MAAIC,UAAU,GAAG,IAAIrC,OAAJ,CAAYmC,SAAZ,CAAjB;AACAE,EAAAA,UAAU,CAACC,aAAX,CAAyBF,QAAzB;AACA,SAAO/B,mBAAmB,CAACkC,IAApB,CAAyBF,UAAzB,EACJrB,IADI,CACC,UAAUwB,OAAV,EAAmB;AACvB,WAAOA,OAAP;AACD,GAHI,WAIE,UAAUC,KAAV,EAAiB;AACtB,UAAOA,KAAP;AACD,GANI,CAAP;AAOD","sourcesContent":["// import AV from 'leancloud-storage'  // 存储服务\r\nconst AV = require('leanengine')\r\nimport { realTime, Message } from '@/utils/leancloud.js'\r\nimport { leanCloudSign } from '@/api/api.js'\r\n\r\nconsole.log(AV.Cloud, 'AV.CloudAV.CloudAV.Cloud');\r\nlet currentConversation = null\r\n\r\nexport async function getChatRoom(clientId, chatRoomInfo) {\r\n  console.log('process.env.VUE_APP_CONFIG_ENV',process.env.VUE_APP_CONFIG_ENV)\r\n  // 统一添加 tag TODO 互踢\r\n  // return realTime.createIMClient(clientId, { tag: 'PC' })\r\n  console.log(chatRoomInfo, 'chatRoomInfo');\r\n  console.log(clientId, 'clientId');\r\n\r\n  // AV.Cloud.define('signLogin', async request => {\r\n  //   const {clientId} = request.params\r\n  //   // 这里可以执行一些检验，例如您的用户系统里面是否有匹配这个 clientId 的用户，或者该用户存在于自定义的黑名单中，\r\n  //   // 你可以在此抛出异常来中断签名的过程：\r\n  //   // throw new AV.Cloud.Error('clientId blocked')\r\n  //   return [f1.appid, clientId, '', f1.utcTimeStamp, f1.randomNum]\r\n  // })\r\n  // var signatureFactory = function (clientId) {\r\n  //   // appid:clientid:sorted_member_ids:timestamp:nonce\r\n  //   return AV.Cloud.rpc('signLogin', {\r\n  //     // appid: f1.appid,\r\n  //     clientId: clientId,\r\n  //     // timestamp: f1.utcTimeStamp,\r\n  //     // nonce: f1.randomNum,\r\n  //     // sign: f1.sign\r\n  //   }); // AV.Cloud.rpc 返回一个 Promise\r\n  // };\r\n  // AV.Cloud.define('signLogin', async request => {\r\n  //   const {clientId} = request.params\r\n  //   // 这里可以执行一些检验，例如您的用户系统里面是否有匹配这个 clientId 的用户，或者该用户存在于自定义的黑名单中，\r\n  //   // 你可以在此抛出异常来中断签名的过程：\r\n  //   // throw new AV.Cloud.Error('clientId blocked')\r\n  //   return sign( (timestamp, nonce) => [f1.appid, clientId, '', timestamp, nonce])\r\n  //   // return {timestamp:f1.utcTimeStamp, nonce:f1.randomNum,signature:f1.sign}\r\n  // })\r\n\r\n  // test meng\r\n  let mac = clientId\r\n  var signatureFactory = function (clientId) {\r\n    if(clientId.slice(5,6) === 'V'){\r\n      mac = clientId.substr(13)\r\n    }\r\n    return leanCloudSign(chatRoomInfo, mac).then((res) => {\r\n      if (res.code === 0) {\r\n        console.log('弹幕签名接口0',res)\r\n        const timestamp = parseInt(res.data[0].utcTimeStamp)\r\n        const nonce = res.data[0].randomNum\r\n        const signature = res.data[0].sign\r\n        return {timestamp, nonce, signature}\r\n      } else {\r\n        console.log('失败')\r\n      }\r\n    })\r\n  };\r\n  var conversationSignatureFactory = function(chatRoomInfo) {\r\n\r\n    return leanCloudSign(chatRoomInfo, mac).then((res) => {\r\n      if (res.code === 0) {\r\n        console.log('弹幕签名接口1',res)\r\n        const timestamp = parseInt(res.data[1].utcTimeStamp)\r\n        const nonce = res.data[1].randomNum\r\n        const signature = res.data[1].sign\r\n        return {timestamp, nonce, signature}\r\n      } else {\r\n        console.log('失败')\r\n      }\r\n    })\r\n  };\r\n\r\n  return realTime.createIMClient(clientId, {\r\n    signatureFactory: signatureFactory,\r\n    conversationSignatureFactory: conversationSignatureFactory,\r\n  }).then(function (currentClient) {\r\n    console.log('currentClient',currentClient)\r\n    return currentClient.getConversation(\r\n      chatRoomInfo\r\n    )\r\n  })\r\n    .then(function (conversation) {\r\n      return conversation.join()\r\n    })\r\n    .then(function (conversation) {\r\n      currentConversation = conversation\r\n      return conversation\r\n    })\r\n    .catch(function (err) {\r\n      console.log('连接直播间失败', err)\r\n    })\r\n}\r\n\r\nexport function sendMsg(userInput, userInfo) {\r\n  let newMessage = new Message(userInput)\r\n  newMessage.setAttributes(userInfo)\r\n  return currentConversation.send(newMessage)\r\n    .then(function (message) {\r\n      return message\r\n    })\r\n    .catch(function (error) {\r\n      throw (error)\r\n    })\r\n}\r\n"]}]}