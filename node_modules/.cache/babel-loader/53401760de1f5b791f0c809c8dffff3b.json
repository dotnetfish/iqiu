{"remainingRequest":"/Users/zj-db0720/work/sourcescode/projects/gitee/iqiu/node_modules/babel-loader/lib/index.js!/Users/zj-db0720/work/sourcescode/projects/gitee/iqiu/node_modules/eslint-loader/index.js??ref--13-0!/Users/zj-db0720/work/sourcescode/projects/gitee/iqiu/src/utils/chat.js","dependencies":[{"path":"/Users/zj-db0720/work/sourcescode/projects/gitee/iqiu/src/utils/chat.js","mtime":1595570908581},{"path":"/Users/zj-db0720/work/sourcescode/projects/gitee/iqiu/node_modules/cache-loader/dist/cjs.js","mtime":1595570902420},{"path":"/Users/zj-db0720/work/sourcescode/projects/gitee/iqiu/node_modules/babel-loader/lib/index.js","mtime":1595570901804},{"path":"/Users/zj-db0720/work/sourcescode/projects/gitee/iqiu/node_modules/eslint-loader/index.js","mtime":1595570904372}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucGFyc2UtaW50IjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL3pqLWRiMDcyMC93b3JrL3NvdXJjZXNjb2RlL3Byb2plY3RzL2dpdGVlL2lxaXUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwoKLy8gaW1wb3J0IEFWIGZyb20gJ2xlYW5jbG91ZC1zdG9yYWdlJyAgLy8g5a2Y5YKo5pyN5YqhCnZhciBBViA9IHJlcXVpcmUoJ2xlYW5lbmdpbmUnKTsKCmltcG9ydCB7IHJlYWxUaW1lLCBNZXNzYWdlIH0gZnJvbSAnQC91dGlscy9sZWFuY2xvdWQuanMnOwppbXBvcnQgeyBsZWFuQ2xvdWRTaWduIH0gZnJvbSAnQC9hcGkvYXBpLmpzJzsKY29uc29sZS5sb2coQVYuQ2xvdWQsICdBVi5DbG91ZEFWLkNsb3VkQVYuQ2xvdWQnKTsKdmFyIGN1cnJlbnRDb252ZXJzYXRpb24gPSBudWxsOwpleHBvcnQgZnVuY3Rpb24gZ2V0Q2hhdFJvb20oX3gsIF94MikgewogIHJldHVybiBfZ2V0Q2hhdFJvb20uYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfQoKZnVuY3Rpb24gX2dldENoYXRSb29tKCkgewogIF9nZXRDaGF0Um9vbSA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShjbGllbnRJZCwgY2hhdFJvb21JbmZvKSB7CiAgICB2YXIgbWFjLCBzaWduYXR1cmVGYWN0b3J5LCBjb252ZXJzYXRpb25TaWduYXR1cmVGYWN0b3J5OwogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBjb25zb2xlLmxvZygncHJvY2Vzcy5lbnYuVlVFX0FQUF9DT05GSUdfRU5WJywgcHJvY2Vzcy5lbnYuVlVFX0FQUF9DT05GSUdfRU5WKTsgLy8g57uf5LiA5re75YqgIHRhZyBUT0RPIOS6kui4ogogICAgICAgICAgICAvLyByZXR1cm4gcmVhbFRpbWUuY3JlYXRlSU1DbGllbnQoY2xpZW50SWQsIHsgdGFnOiAnUEMnIH0pCgogICAgICAgICAgICBjb25zb2xlLmxvZyhjaGF0Um9vbUluZm8sICdjaGF0Um9vbUluZm8nKTsKICAgICAgICAgICAgY29uc29sZS5sb2coY2xpZW50SWQsICdjbGllbnRJZCcpOyAvLyBBVi5DbG91ZC5kZWZpbmUoJ3NpZ25Mb2dpbicsIGFzeW5jIHJlcXVlc3QgPT4gewogICAgICAgICAgICAvLyAgIGNvbnN0IHtjbGllbnRJZH0gPSByZXF1ZXN0LnBhcmFtcwogICAgICAgICAgICAvLyAgIC8vIOi/memHjOWPr+S7peaJp+ihjOS4gOS6m+ajgOmqjO+8jOS+i+WmguaCqOeahOeUqOaIt+ezu+e7n+mHjOmdouaYr+WQpuacieWMuemFjei/meS4qiBjbGllbnRJZCDnmoTnlKjmiLfvvIzmiJbogIXor6XnlKjmiLflrZjlnKjkuo7oh6rlrprkuYnnmoTpu5HlkI3ljZXkuK3vvIwKICAgICAgICAgICAgLy8gICAvLyDkvaDlj6/ku6XlnKjmraTmipvlh7rlvILluLjmnaXkuK3mlq3nrb7lkI3nmoTov4fnqIvvvJoKICAgICAgICAgICAgLy8gICAvLyB0aHJvdyBuZXcgQVYuQ2xvdWQuRXJyb3IoJ2NsaWVudElkIGJsb2NrZWQnKQogICAgICAgICAgICAvLyAgIHJldHVybiBbZjEuYXBwaWQsIGNsaWVudElkLCAnJywgZjEudXRjVGltZVN0YW1wLCBmMS5yYW5kb21OdW1dCiAgICAgICAgICAgIC8vIH0pCiAgICAgICAgICAgIC8vIHZhciBzaWduYXR1cmVGYWN0b3J5ID0gZnVuY3Rpb24gKGNsaWVudElkKSB7CiAgICAgICAgICAgIC8vICAgLy8gYXBwaWQ6Y2xpZW50aWQ6c29ydGVkX21lbWJlcl9pZHM6dGltZXN0YW1wOm5vbmNlCiAgICAgICAgICAgIC8vICAgcmV0dXJuIEFWLkNsb3VkLnJwYygnc2lnbkxvZ2luJywgewogICAgICAgICAgICAvLyAgICAgLy8gYXBwaWQ6IGYxLmFwcGlkLAogICAgICAgICAgICAvLyAgICAgY2xpZW50SWQ6IGNsaWVudElkLAogICAgICAgICAgICAvLyAgICAgLy8gdGltZXN0YW1wOiBmMS51dGNUaW1lU3RhbXAsCiAgICAgICAgICAgIC8vICAgICAvLyBub25jZTogZjEucmFuZG9tTnVtLAogICAgICAgICAgICAvLyAgICAgLy8gc2lnbjogZjEuc2lnbgogICAgICAgICAgICAvLyAgIH0pOyAvLyBBVi5DbG91ZC5ycGMg6L+U5Zue5LiA5LiqIFByb21pc2UKICAgICAgICAgICAgLy8gfTsKICAgICAgICAgICAgLy8gQVYuQ2xvdWQuZGVmaW5lKCdzaWduTG9naW4nLCBhc3luYyByZXF1ZXN0ID0+IHsKICAgICAgICAgICAgLy8gICBjb25zdCB7Y2xpZW50SWR9ID0gcmVxdWVzdC5wYXJhbXMKICAgICAgICAgICAgLy8gICAvLyDov5nph4zlj6/ku6XmiafooYzkuIDkupvmo4DpqozvvIzkvovlpoLmgqjnmoTnlKjmiLfns7vnu5/ph4zpnaLmmK/lkKbmnInljLnphY3ov5nkuKogY2xpZW50SWQg55qE55So5oi377yM5oiW6ICF6K+l55So5oi35a2Y5Zyo5LqO6Ieq5a6a5LmJ55qE6buR5ZCN5Y2V5Lit77yMCiAgICAgICAgICAgIC8vICAgLy8g5L2g5Y+v5Lul5Zyo5q2k5oqb5Ye65byC5bi45p2l5Lit5pat562+5ZCN55qE6L+H56iL77yaCiAgICAgICAgICAgIC8vICAgLy8gdGhyb3cgbmV3IEFWLkNsb3VkLkVycm9yKCdjbGllbnRJZCBibG9ja2VkJykKICAgICAgICAgICAgLy8gICByZXR1cm4gc2lnbiggKHRpbWVzdGFtcCwgbm9uY2UpID0+IFtmMS5hcHBpZCwgY2xpZW50SWQsICcnLCB0aW1lc3RhbXAsIG5vbmNlXSkKICAgICAgICAgICAgLy8gICAvLyByZXR1cm4ge3RpbWVzdGFtcDpmMS51dGNUaW1lU3RhbXAsIG5vbmNlOmYxLnJhbmRvbU51bSxzaWduYXR1cmU6ZjEuc2lnbn0KICAgICAgICAgICAgLy8gfSkKICAgICAgICAgICAgLy8gdGVzdCBtZW5nCgogICAgICAgICAgICBtYWMgPSBjbGllbnRJZDsKCiAgICAgICAgICAgIHNpZ25hdHVyZUZhY3RvcnkgPSBmdW5jdGlvbiBzaWduYXR1cmVGYWN0b3J5KGNsaWVudElkKSB7CiAgICAgICAgICAgICAgaWYgKGNsaWVudElkLnNsaWNlKDUsIDYpID09PSAnVicpIHsKICAgICAgICAgICAgICAgIG1hYyA9IGNsaWVudElkLnN1YnN0cigxMyk7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICByZXR1cm4gbGVhbkNsb3VkU2lnbihjaGF0Um9vbUluZm8sIG1hYykudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICAgICAgICBpZiAocmVzLmNvZGUgPT09IDApIHsKICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ+W8ueW5leetvuWQjeaOpeWPozAnLCByZXMpOwogICAgICAgICAgICAgICAgICB2YXIgdGltZXN0YW1wID0gcGFyc2VJbnQocmVzLmRhdGFbMF0udXRjVGltZVN0YW1wKTsKICAgICAgICAgICAgICAgICAgdmFyIG5vbmNlID0gcmVzLmRhdGFbMF0ucmFuZG9tTnVtOwogICAgICAgICAgICAgICAgICB2YXIgc2lnbmF0dXJlID0gcmVzLmRhdGFbMF0uc2lnbjsKICAgICAgICAgICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgICAgICAgICB0aW1lc3RhbXA6IHRpbWVzdGFtcCwKICAgICAgICAgICAgICAgICAgICBub25jZTogbm9uY2UsCiAgICAgICAgICAgICAgICAgICAgc2lnbmF0dXJlOiBzaWduYXR1cmUKICAgICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCflpLHotKUnKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfTsKCiAgICAgICAgICAgIGNvbnZlcnNhdGlvblNpZ25hdHVyZUZhY3RvcnkgPSBmdW5jdGlvbiBjb252ZXJzYXRpb25TaWduYXR1cmVGYWN0b3J5KGNoYXRSb29tSW5mbykgewogICAgICAgICAgICAgIHJldHVybiBsZWFuQ2xvdWRTaWduKGNoYXRSb29tSW5mbywgbWFjKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgICAgICAgIGlmIChyZXMuY29kZSA9PT0gMCkgewogICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygn5by55bmV562+5ZCN5o6l5Y+jMScsIHJlcyk7CiAgICAgICAgICAgICAgICAgIHZhciB0aW1lc3RhbXAgPSBwYXJzZUludChyZXMuZGF0YVsxXS51dGNUaW1lU3RhbXApOwogICAgICAgICAgICAgICAgICB2YXIgbm9uY2UgPSByZXMuZGF0YVsxXS5yYW5kb21OdW07CiAgICAgICAgICAgICAgICAgIHZhciBzaWduYXR1cmUgPSByZXMuZGF0YVsxXS5zaWduOwogICAgICAgICAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICAgICAgICAgIHRpbWVzdGFtcDogdGltZXN0YW1wLAogICAgICAgICAgICAgICAgICAgIG5vbmNlOiBub25jZSwKICAgICAgICAgICAgICAgICAgICBzaWduYXR1cmU6IHNpZ25hdHVyZQogICAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ+Wksei0pScpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9OwoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgcmVhbFRpbWUuY3JlYXRlSU1DbGllbnQoY2xpZW50SWQsIHsKICAgICAgICAgICAgICBzaWduYXR1cmVGYWN0b3J5OiBzaWduYXR1cmVGYWN0b3J5LAogICAgICAgICAgICAgIGNvbnZlcnNhdGlvblNpZ25hdHVyZUZhY3Rvcnk6IGNvbnZlcnNhdGlvblNpZ25hdHVyZUZhY3RvcnkKICAgICAgICAgICAgfSkudGhlbihmdW5jdGlvbiAoY3VycmVudENsaWVudCkgewogICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdjdXJyZW50Q2xpZW50JywgY3VycmVudENsaWVudCk7CiAgICAgICAgICAgICAgcmV0dXJuIGN1cnJlbnRDbGllbnQuZ2V0Q29udmVyc2F0aW9uKGNoYXRSb29tSW5mbyk7CiAgICAgICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKGNvbnZlcnNhdGlvbikgewogICAgICAgICAgICAgIHJldHVybiBjb252ZXJzYXRpb24uam9pbigpOwogICAgICAgICAgICB9KS50aGVuKGZ1bmN0aW9uIChjb252ZXJzYXRpb24pIHsKICAgICAgICAgICAgICBjdXJyZW50Q29udmVyc2F0aW9uID0gY29udmVyc2F0aW9uOwogICAgICAgICAgICAgIHJldHVybiBjb252ZXJzYXRpb247CiAgICAgICAgICAgIH0pWyJjYXRjaCJdKGZ1bmN0aW9uIChlcnIpIHsKICAgICAgICAgICAgICBjb25zb2xlLmxvZygn6L+e5o6l55u05pKt6Ze05aSx6LSlJywgZXJyKTsKICAgICAgICAgICAgfSkpOwoKICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlKTsKICB9KSk7CiAgcmV0dXJuIF9nZXRDaGF0Um9vbS5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9CgpleHBvcnQgZnVuY3Rpb24gc2VuZE1zZyh1c2VySW5wdXQsIHVzZXJJbmZvKSB7CiAgdmFyIG5ld01lc3NhZ2UgPSBuZXcgTWVzc2FnZSh1c2VySW5wdXQpOwogIG5ld01lc3NhZ2Uuc2V0QXR0cmlidXRlcyh1c2VySW5mbyk7CiAgcmV0dXJuIGN1cnJlbnRDb252ZXJzYXRpb24uc2VuZChuZXdNZXNzYWdlKS50aGVuKGZ1bmN0aW9uIChtZXNzYWdlKSB7CiAgICByZXR1cm4gbWVzc2FnZTsKICB9KVsiY2F0Y2giXShmdW5jdGlvbiAoZXJyb3IpIHsKICAgIHRocm93IGVycm9yOwogIH0pOwp9"},{"version":3,"sources":["/Users/zj-db0720/work/sourcescode/projects/gitee/iqiu/src/utils/chat.js"],"names":["AV","require","realTime","Message","leanCloudSign","console","log","Cloud","currentConversation","getChatRoom","clientId","chatRoomInfo","process","env","VUE_APP_CONFIG_ENV","mac","signatureFactory","slice","substr","then","res","code","timestamp","parseInt","data","utcTimeStamp","nonce","randomNum","signature","sign","conversationSignatureFactory","createIMClient","currentClient","getConversation","conversation","join","err","sendMsg","userInput","userInfo","newMessage","setAttributes","send","message","error"],"mappings":"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","sourcesContent":["// import AV from 'leancloud-storage'  // 存储服务\nconst AV = require('leanengine')\nimport { realTime, Message } from '@/utils/leancloud.js'\nimport { leanCloudSign } from '@/api/api.js'\n\nconsole.log(AV.Cloud, 'AV.CloudAV.CloudAV.Cloud');\nlet currentConversation = null\n\nexport async function getChatRoom(clientId, chatRoomInfo) {\n  console.log('process.env.VUE_APP_CONFIG_ENV',process.env.VUE_APP_CONFIG_ENV)\n  // 统一添加 tag TODO 互踢\n  // return realTime.createIMClient(clientId, { tag: 'PC' })\n  console.log(chatRoomInfo, 'chatRoomInfo');\n  console.log(clientId, 'clientId');\n\n  // AV.Cloud.define('signLogin', async request => {\n  //   const {clientId} = request.params\n  //   // 这里可以执行一些检验，例如您的用户系统里面是否有匹配这个 clientId 的用户，或者该用户存在于自定义的黑名单中，\n  //   // 你可以在此抛出异常来中断签名的过程：\n  //   // throw new AV.Cloud.Error('clientId blocked')\n  //   return [f1.appid, clientId, '', f1.utcTimeStamp, f1.randomNum]\n  // })\n  // var signatureFactory = function (clientId) {\n  //   // appid:clientid:sorted_member_ids:timestamp:nonce\n  //   return AV.Cloud.rpc('signLogin', {\n  //     // appid: f1.appid,\n  //     clientId: clientId,\n  //     // timestamp: f1.utcTimeStamp,\n  //     // nonce: f1.randomNum,\n  //     // sign: f1.sign\n  //   }); // AV.Cloud.rpc 返回一个 Promise\n  // };\n  // AV.Cloud.define('signLogin', async request => {\n  //   const {clientId} = request.params\n  //   // 这里可以执行一些检验，例如您的用户系统里面是否有匹配这个 clientId 的用户，或者该用户存在于自定义的黑名单中，\n  //   // 你可以在此抛出异常来中断签名的过程：\n  //   // throw new AV.Cloud.Error('clientId blocked')\n  //   return sign( (timestamp, nonce) => [f1.appid, clientId, '', timestamp, nonce])\n  //   // return {timestamp:f1.utcTimeStamp, nonce:f1.randomNum,signature:f1.sign}\n  // })\n\n  // test meng\n  let mac = clientId\n  var signatureFactory = function (clientId) {\n    if(clientId.slice(5,6) === 'V'){\n      mac = clientId.substr(13)\n    }\n    return leanCloudSign(chatRoomInfo, mac).then((res) => {\n      if (res.code === 0) {\n        console.log('弹幕签名接口0',res)\n        const timestamp = parseInt(res.data[0].utcTimeStamp)\n        const nonce = res.data[0].randomNum\n        const signature = res.data[0].sign\n        return {timestamp, nonce, signature}\n      } else {\n        console.log('失败')\n      }\n    })\n  };\n  var conversationSignatureFactory = function(chatRoomInfo) {\n\n    return leanCloudSign(chatRoomInfo, mac).then((res) => {\n      if (res.code === 0) {\n        console.log('弹幕签名接口1',res)\n        const timestamp = parseInt(res.data[1].utcTimeStamp)\n        const nonce = res.data[1].randomNum\n        const signature = res.data[1].sign\n        return {timestamp, nonce, signature}\n      } else {\n        console.log('失败')\n      }\n    })\n  };\n\n  return realTime.createIMClient(clientId, {\n    signatureFactory: signatureFactory,\n    conversationSignatureFactory: conversationSignatureFactory,\n  }).then(function (currentClient) {\n    console.log('currentClient',currentClient)\n    return currentClient.getConversation(\n      chatRoomInfo\n    )\n  })\n    .then(function (conversation) {\n      return conversation.join()\n    })\n    .then(function (conversation) {\n      currentConversation = conversation\n      return conversation\n    })\n    .catch(function (err) {\n      console.log('连接直播间失败', err)\n    })\n}\n\nexport function sendMsg(userInput, userInfo) {\n  let newMessage = new Message(userInput)\n  newMessage.setAttributes(userInfo)\n  return currentConversation.send(newMessage)\n    .then(function (message) {\n      return message\n    })\n    .catch(function (error) {\n      throw (error)\n    })\n}\n"]}]}