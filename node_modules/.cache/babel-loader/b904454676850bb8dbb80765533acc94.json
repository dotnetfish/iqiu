{"remainingRequest":"D:\\pc\\iqiu\\node_modules\\thread-loader\\dist\\cjs.js!D:\\pc\\iqiu\\node_modules\\babel-loader\\lib\\index.js!D:\\pc\\iqiu\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\pc\\iqiu\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\pc\\iqiu\\src\\views\\MCenter\\AnchorApply.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\pc\\iqiu\\src\\views\\MCenter\\AnchorApply.vue","mtime":1594000643105},{"path":"D:\\pc\\iqiu\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\pc\\iqiu\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\pc\\iqiu\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\pc\\iqiu\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\pc\\iqiu\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}